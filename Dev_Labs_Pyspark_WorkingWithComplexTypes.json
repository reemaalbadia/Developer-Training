{"paragraphs":[{"text":"%md\n# About This Lab\n**Objective:** Become familiar with Spark complex types operations\n**File locations:**\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Working with DataFrames\n\nCopyright © 2010–2021 Cloudera. All rights reserved.\nNot to be reproduced or shared without prior written consent from Cloudera.\n\n---","user":"anonymous","dateUpdated":"2022-01-25T03:33:35-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982303_-709147682","id":"20171105-200834_1116095891","dateCreated":"2021-11-29T14:29:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:31978","dateFinished":"2022-01-25T03:33:35-0800","dateStarted":"2022-01-25T03:33:35-0800","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>About This Lab</h1>\n<p><strong>Objective:</strong> Become familiar with Spark complex types operations\n<br  /><strong>File locations:</strong>\n<br  /><strong>Successful outcome:</strong>\n<br  /><strong>Before you begin:</strong>\n<br  /><strong>Related lessons:</strong> Working with DataFrames</p>\n<p>Copyright © 2010–2021 Cloudera. All rights reserved.\n<br  />Not to be reproduced or shared without prior written consent from Cloudera.</p>\n<hr />\n"}]}},{"text":"%md\n## Overview\n\nIn this module we consider the complex collection data types provided bySpark SQL: arrays, maps, and structs.\nWe show how to construct and transform columns with complex collection data types.\n\n\n## Complex Collection Data Types\n\n* Complex collection data types provide a way to renormalize the denormalized data that is common in the big-data world\n\n* The complex collection data types are defined in the `pyspark.sql.types` module:\n    * The *ArrayType* represents a variable-length collection of elements\n    * The *MapType* represents a variable-length collection of key-value pairs\n    * The *StructType* represents a fixed-length collection of named elements\n\n* Complex collection data types are obtained in several ways:\n    * Inherited from Hive/Impala tables\n    * Inferred from nested JSON files\n    * Generated by aggregate functions such as `collect_list` and `collect_set`\n    * Constructed manually","user":"anonymous","dateUpdated":"2022-01-25T03:33:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982304_1015086472","id":"20210609-214236_1622006817","dateCreated":"2021-11-29T14:29:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31979","dateFinished":"2022-01-25T03:33:42-0800","dateStarted":"2022-01-25T03:33:42-0800","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Overview</h2>\n<p>In this module we consider the complex collection data types provided bySpark SQL: arrays, maps, and structs.\n<br  />We show how to construct and transform columns with complex collection data types.</p>\n<h2>Complex Collection Data Types</h2>\n<ul>\n<li><p>Complex collection data types provide a way to renormalize the denormalized data that is common in the big-data world</p>\n</li>\n<li><p>The complex collection data types are defined in the <code>pyspark.sql.types</code> module:</p>\n<ul>\n<li>The <em>ArrayType</em> represents a variable-length collection of elements</li>\n<li>The <em>MapType</em> represents a variable-length collection of key-value pairs</li>\n<li>The <em>StructType</em> represents a fixed-length collection of named elements</li>\n</ul>\n</li>\n<li><p>Complex collection data types are obtained in several ways:</p>\n<ul>\n<li>Inherited from Hive/Impala tables</li>\n<li>Inferred from nested JSON files</li>\n<li>Generated by aggregate functions such as <code>collect_list</code> and <code>collect_set</code></li>\n<li>Constructed manually</li>\n</ul>\n</li>\n</ul>\n"}]}},{"text":"%md\n# Setup\n---","user":"anonymous","dateUpdated":"2022-01-25T03:33:53-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982304_-201094021","id":"20181114-164229_902436001","dateCreated":"2021-11-29T14:29:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31980","dateFinished":"2022-01-25T03:33:53-0800","dateStarted":"2022-01-25T03:33:53-0800","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Setup</h1>\n<hr />\n"}]}},{"title":"Read the raw data from HDFS","text":"%pyspark\n\nrides = spark.read.csv(\"/duocar/raw/rides/\", header=True, inferSchema=True)\ndrivers = spark.read.csv(\"/duocar/raw/drivers/\", header=True, inferSchema=True)\nriders = spark.read.csv(\"/duocar/raw/riders/\", header=True, inferSchema=True)\n","user":"anonymous","dateUpdated":"2022-01-25T03:33:58-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982304_2117482078","id":"20210609-214604_1208392134","dateCreated":"2021-11-29T14:29:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31981","dateFinished":"2022-01-25T03:34:00-0800","dateStarted":"2022-01-25T03:33:58-0800","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n# Lesson\n---","user":"anonymous","dateUpdated":"2022-01-25T03:34:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982305_1428238212","id":"20210609-150445_381117564","dateCreated":"2021-11-29T14:29:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31982","dateFinished":"2022-01-25T03:34:04-0800","dateStarted":"2022-01-25T03:34:04-0800","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Lesson</h1>\n<hr />\n"}]}},{"text":"%md\n## Arrays","user":"anonymous","dateUpdated":"2022-01-25T03:34:15-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982305_300295555","id":"20210609-214808_2124581014","dateCreated":"2021-11-29T14:29:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31983","dateFinished":"2022-01-25T03:34:15-0800","dateStarted":"2022-01-25T03:34:15-0800","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Arrays</h2>\n"}]}},{"title":"Use the array function to create an array from multiple columns","text":"%pyspark\n\nfrom pyspark.sql.functions import array\ndrivers_array = drivers \\\n  .withColumn(\"vehicle_array\", array(\"vehicle_make\", \"vehicle_model\")) \\\n  .select(\"vehicle_make\", \"vehicle_model\", \"vehicle_array\")\ndrivers_array.printSchema()\ndrivers_array.show(5, False)","user":"anonymous","dateUpdated":"2022-01-25T03:34:18-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982305_-1517905950","id":"20210609-214950_490436151","dateCreated":"2021-11-29T14:29:42-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31984","dateFinished":"2022-01-25T03:34:19-0800","dateStarted":"2022-01-25T03:34:18-0800","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- vehicle_make: string (nullable = true)\n |-- vehicle_model: string (nullable = true)\n |-- vehicle_array: array (nullable = false)\n |    |-- element: string (containsNull = true)\n\n+------------+-------------+------------------+\n|vehicle_make|vehicle_model|vehicle_array     |\n+------------+-------------+------------------+\n|Chevrolet   |Cruze        |[Chevrolet, Cruze]|\n|GMC         |Yukon XL     |[GMC, Yukon XL]   |\n|INFINITI    |EX35         |[INFINITI, EX35]  |\n|Subaru      |Tribeca      |[Subaru, Tribeca] |\n|Kia         |Sorento      |[Kia, Sorento]    |\n+------------+-------------+------------------+\nonly showing top 5 rows"}]}},{"title":"Use index notation to access elements of the array","text":"%pyspark\n\nfrom pyspark.sql.functions import col\ndrivers_array \\\n  .select(\"vehicle_array\", col(\"vehicle_array\")[0]) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982305_-1596433508","id":"20210609-215139_462878767","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31985"},{"title":"Use the size function to get the length of the array","text":"%pyspark\n\nfrom pyspark.sql.functions import size\ndrivers_array \\\n  .select(\"vehicle_array\", size(\"vehicle_array\")) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982305_-549611557","id":"20210609-215230_879633660","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31986"},{"title":"Use the sort_array function to sort the array","text":"%pyspark\n\nfrom pyspark.sql.functions import sort_array\ndrivers_array \\\n  .select(\"vehicle_array\", sort_array(\"vehicle_array\", asc=True)) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982306_5816534","id":"20210609-215326_1600236400","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31987"},{"title":"Use the `array_contains` function to search the array","text":"%pyspark\n\nfrom pyspark.sql.functions import array_contains\ndrivers_array \\\n  .select(\"vehicle_array\", array_contains(\"vehicle_array\", \"Subaru\")) \\\n  .show(5, False)\n","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982306_-605927430","id":"20210609-215508_1658632882","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31988"},{"title":"Use the `explode` and `posexplode` functions to explode the array","text":"%pyspark\n\nfrom pyspark.sql.functions import explode, posexplode\ndrivers_array \\\n  .select(\"vehicle_array\", explode(\"vehicle_array\")) \\\n  .show(5, False)\ndrivers_array \\\n  .select(\"vehicle_array\", posexplode(\"vehicle_array\")) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982306_1129425806","id":"20210609-215631_592611552","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31989"},{"title":"Note that you can pass multiple names to the `alias` method","text":"%pyspark\n\ndrivers_array \\\n  .select(\"vehicle_array\", posexplode(\"vehicle_array\").alias(\"position\", \"column\")) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982306_2917163","id":"20210609-215708_1101979237","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31990"},{"text":"%md\n## Maps","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982306_1662355064","id":"20210609-214825_941697596","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31991"},{"title":"Use the create_map function to create a map","text":"%pyspark\n\nfrom pyspark.sql.functions import lit, create_map\ndrivers_map = drivers \\\n  .withColumn(\"vehicle_map\", create_map(lit(\"make\"), \"vehicle_make\", lit(\"model\"), \"vehicle_model\")) \\\n  .select(\"vehicle_make\", \"vehicle_model\", \"vehicle_map\")\ndrivers_map.printSchema()\ndrivers_map.show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982307_1716826734","id":"20210609-215809_1949067261","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31992"},{"title":"Use dot notation to access a value by key","text":"%pyspark\n\ndrivers_map.select(\"vehicle_map\", col(\"vehicle_map\").make).show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982307_531496400","id":"20210609-215929_1972517761","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31993"},{"title":"Use the `size` function to get the length of the map","text":"%pyspark\n\ndrivers_map.select(\"vehicle_map\", size(\"vehicle_map\")).show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982307_767153562","id":"20210609-220011_2145852577","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31994"},{"title":"Use the `explode` and `posexplode` functions to explode the map","text":"%pyspark\n\ndrivers_map.select(\"vehicle_map\", explode(\"vehicle_map\")).show(5, False)\ndrivers_map.select(\"vehicle_map\", posexplode(\"vehicle_map\")).show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982307_-794824320","id":"20210609-220050_526377266","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31995"},{"text":"%md\n## Structs","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982307_773408342","id":"20210609-214847_1367988366","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31996"},{"title":"Use the struct function to create a struct","text":"%pyspark\n\nfrom pyspark.sql.functions import struct\ndrivers_struct = drivers \\\n  .withColumn(\"vehicle_struct\", struct(col(\"vehicle_make\").alias(\"make\"), col(\"vehicle_model\").alias(\"model\"))) \\\n  .select(\"vehicle_make\", \"vehicle_model\", \"vehicle_struct\")\ndrivers_struct.printSchema()\ndrivers_struct.show(5, False)\ndrivers_struct.head(5)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982308_-624056881","id":"20210609-220250_300408590","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31997"},{"title":"Note","text":"%md\nThe struct is a `Row` object (embedded in a `Row` object).","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982308_-1854316941","id":"20210609-220428_2046707505","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31998"},{"title":"Use dot notation to access struct elements","text":"%pyspark\n\ndrivers_struct \\\n  .select(\"vehicle_struct\", col(\"vehicle_struct\").make) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982308_-1410082438","id":"20210609-220408_1212114924","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:31999"},{"title":"Use the `to_json` function to convert the struct to a JSON string","text":"%pyspark\n\nfrom pyspark.sql.functions import to_json\ndrivers_struct \\\n  .select(\"vehicle_struct\", to_json(\"vehicle_struct\")) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982308_1346377018","id":"20210609-220533_1798862611","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32000"},{"text":"%md\n# Lab\n---","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982308_1049862349","id":"20210609-150527_79851234","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32001"},{"title":"1 - Create an array called `home_array` that includes the driver's home latitude and longitude","text":"%pyspark\n","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982309_2106191339","id":"20210609-221114_987659308","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32002"},{"title":"2 - Create a map called `name_map` that includes the driver's first and last name","text":"%pyspark\n","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982309_1848797966","id":"20210609-221146_1508826613","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32003"},{"title":"3 - Create a struct called `name_struct` that includes the driver's first # and last name","text":"%pyspark\n","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982309_-105546106","id":"20210609-221144_10985682","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32004"},{"text":"%md\n# Result\n**You have now:** become familiar with Spark complex types operations\n\n---","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982309_-1927308881","id":"20181119-142716_792318228","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32005"},{"text":"%md\n# Solution\n---","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982310_-994503506","id":"20171113-155535_1769142099","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32006"},{"title":"1 - Create an array called `home_array` that includes the driver's home latitude and longitude","text":"%pyspark\n\nfrom pyspark.sql.functions import array\n\ndrivers_array = drivers \\\n  .withColumn(\"home_array\", array(\"home_lat\", \"home_lon\"))\n\ndrivers_array \\\n  .select(\"home_lat\", \"home_lon\", \"home_array\") \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982310_273434036","id":"20210609-221342_1618027877","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32007"},{"title":"2 - Create a map called `name_map` that includes the driver's first and last name","text":"%pyspark\n\nfrom pyspark.sql.functions import lit, create_map\n\ndrivers_map = drivers \\\n  .withColumn(\"name_map\", create_map(lit(\"first\"), \"first_name\", lit(\"last\"), \"last_name\"))\n  \ndrivers_map \\\n  .select(\"first_name\", \"last_name\", \"name_map\") \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982310_1109512439","id":"20210609-221423_1874248249","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32008"},{"title":"3 - Create a struct called `name_struct` that includes the driver's first # and last name","text":"%pyspark\n\nfrom pyspark.sql.functions import col, struct\ndrivers_struct = drivers \\\n  .withColumn(\"name_struct\", struct(col(\"first_name\").alias(\"first\"), col(\"last_name\").alias(\"last\")))\n\nfrom pyspark.sql.functions import to_json\ndrivers_struct \\\n  .select(\"first_name\", \"last_name\", \"name_struct\", to_json(\"name_struct\")) \\\n  .show(5, False)","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982310_488001598","id":"20210609-221431_532662891","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32009"},{"text":"%md\n# Tear Down\n---","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982310_-1585801850","id":"20210609-150643_1464999975","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32010"},{"title":"Delete the Livy session","text":"%sh\n\nsessionId=$(curl -s localhost:8998/sessions | jq '.sessions[0].id')\ncurl -s localhost:8998/sessions/$sessionId -X DELETE\n","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982311_-386900100","id":"20210609-150701_1685056922","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32011"},{"title":"References","text":"%md\n\n* [Spark Python API - pyspark.sql.functions.array](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.sql.types.ArrayType.html#pyspark.sql.types.ArrayType)\n\n* [Spark Python API - pyspark.sql.functions.create_map](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.sql.types.MapType.html#pyspark.sql.types.MapType)\n\n* [Spark Python API - pyspark.sql.functions.struct](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.sql.types.StructType.html#pyspark.sql.types.StructType)\n","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982311_-976676573","id":"20210609-220720_2066698488","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32012"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982311_-1318526866","id":"20181116-135131_93712280","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32013"},{"text":"%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera University\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982312_295984252","id":"20200110-154537_1406191376","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32014"},{"text":"%angular\n","user":"anonymous","dateUpdated":"2021-11-29T14:29:42-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1638224982312_-1381784849","id":"20200110-162013_302547143","dateCreated":"2021-11-29T14:29:42-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:32015"}],"name":"Dev/Labs/Pyspark/WorkingWithComplexTypes","id":"2GP99V3Q9","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}